% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evaluateParams.R
\name{evaluateParams}
\alias{evaluateParams}
\title{Evaluate Similarity Score Parameters}
\usage{
evaluateParams(object, A = seq(60, 150, by = 10), B = seq(6, 15),
  C = seq(0.1, 0.5, by = 0.1), fit = c("gam", "loess"),
  usePPM = FALSE, useAdduct = FALSE, adduct = 1, minScore = 0.5,
  penalty = 1, groups = NULL)
}
\arguments{
\item{object}{metabCombiner object}

\item{A}{Numeric weight for penalizing m/z differences.}

\item{B}{Numeric weight for penalizing differences between fitted & observed
retention times}

\item{C}{Numeric weight for differences in Q (abundance quantiles).}

\item{fit}{Character. Choice of fitted rt model, "gam" or "loess."}

\item{usePPM}{logical. Option to use relative (as opposed to absolute) m/z
differences in score computation.}

\item{useAdduct}{logical. Option to penalize mismatches in (non-empty) adduct
column labels.}

\item{adduct}{numeric. If useAdduct is TRUE, divides mismatching and non-empty
adduct column labels by this value.}

\item{minScore}{numeric. Minimum score to count towards objective function value.}

\item{penalty}{numeric. Subtractive mismatch penalty.}

\item{groups}{integer. Vector of feature groups to score. If set to NULL
(default), will compute scores for all feature groups.}
}
\value{
A data frame with the following columns:

\item{A}{m/z weight values}
\item{B}{rt weight values}
\item{C}{Q weight values}
\item{score}{objective function evaluation of (A,B,C) combination}
}
\description{
This function provides a method for guiding suitable parameters for A, B, & C
weights parameters in the \code{\link{calcScores}} method. Combinations of
parameters are evaluated based on the similarity scores of matching and
mismatching identity labels. Input datasets must have at least one compound id
in common with each other, and preferably more than 10.
}
\note{
In contrast to \code{\link{calcScores}} function, A, B, & C take numeric
vectors as input, as opposed to constants. The total number of rows in the
output will be equal to the products of the lengths of these input vectors
}
