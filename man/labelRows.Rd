% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/labelRows.R
\name{labelRows}
\alias{labelRows}
\title{Annotate and Remove Report Rows}
\usage{
labelRows(
  object,
  maxRankX = 3,
  maxRankY = 3,
  minScore = 0.3,
  conflict,
  method = c("score", "mzrt"),
  balanced = TRUE,
  remove = FALSE,
  brackets_ignore = c("(", "[", "{")
)
}
\arguments{
\item{object}{Either a \code{metabCombiner} object or \code{combinedTable}.}

\item{maxRankX}{Integer. Maximum allowable rank for X dataset features.}

\item{maxRankY}{Integer. Maximum allowable rank for Y dataset features.}

\item{minScore}{Numeric. Minimum allowable score (between 0 & 1) for
metabolomics FPAs.}

\item{conflict}{numeric used to determine subgroups. If method = "score", a
constant (between 0 & 1) score difference between a pair of
conflicting FPAs. If method = "mzrt", a length 4 numeric:
(m/z, rt, m/z, rt) tolerances, the first pair for X dataset
features and the second pair for Y dataset features.}

\item{method}{Conflict detection method. If equal to "score" (default),
assigns a conflict subgroup if score of lower-ranking FPA is
within some tolerance of higher-ranking FPA. If set to "mzrt",
assigns a conflicting subgroup if within a small m/z & rt
distance of the top-ranked FPA.}

\item{balanced}{Logical. Optional processing of "balanced" groups, defined
as groups with an equal number of features from input
datasets where all features have a 1-1 match.}

\item{remove}{Logical. Option to keep or discard rows deemed removable.}

\item{brackets_ignore}{character. Bracketed identity strings of the types
in this argument will be ignored}
}
\value{
updated \code{combinedTable} or \code{metabCombiner} object. The
table will have three new columns:

\item{labels}{characterization of feature alignments as described}
\item{subgroup}{conflicting subgroup number of feature alignments}
\item{alt}{alternate subgroup for rows in multiple feature pair conflicts}
}
\description{
Method for annotation of identity-matched, removable, & conflicting feature
pair alignments (FPAs) in \code{combinedTable}. FPAs that fall within some
small measure (in score or mz/rt) of the top-ranked FPA may require further
inspection are organized into subgroups.
.
}
\details{
\code{metabCombiner} initially reports all possible FPAs in the rows of the
\code{combinedTable} report. Most of these are misalignments that
 require removal. This function is used to automate most of the reduction
 process by labeling rows as removable or conflicting, based on certain
 conditions, and is performed after computing similarity scores.

 A label may take on one of four values:

 a) "": No determination made
 b) "IDENTITY": an alignment with matching identity "idx & idy" strings
 c) "REMOVE": a row determined to be a misalignment
 d) "CONFLICT": competing alignments for one or multiple shared features

The labeling rules are as follows:
1) Rows with matching idx & idy strings are labeled "IDENTITY". These rows
   are not labeled "REMOVE", irrespective of subsequent criteria.
2) Groups determined to be 'balanced': label rows with rankX > 1 & rankY > 1
   "REMOVE" irrespective of \code{conflict} criteria
3) Rows with a score < \code{minScore}: label "REMOVE"
4) Rows with rankX > \code{maxRankX} and/or rankY > \code{maxRankY}:
   label "REMOVE"
5) Conflicting subgroup assignment as determined  by \code{method} &
   \code{conflict} arguments. Conflicting alignments following outside
   \code{conflict} thresholds: labeled "REMOVE". Otherwise,
}
\examples{
data(plasma30)
data(plasma20)

p30 <- metabData(plasma30, samples = "CHEAR")
p20 <- metabData(plasma20, samples = "Red", rtmax = 17.25)
p.comb = metabCombiner(xdata = p30, ydata = p20, binGap = 0.0075)
p.comb = selectAnchors(p.comb, tolmz = 0.003, tolQ = 0.3, windy = 0.02)
p.comb = fit_gam(p.comb, k = 20, iterFilter = 1)
p.comb = calcScores(p.comb, A = 90, B = 14, C = 0.5)
cTable = combinedTable(p.comb)

##example using score-based conflict detection method
lTable = labelRows(cTable, maxRankX = 3, maxRankY = 2, minScore = 0.5,
    method = "score", conflict = 0.2)

##example using mzrt-based conflict detection method
lTable = labelRows(cTable, method = "mzrt", maxRankX = 3, maxRankY = 2,
                     conflict = c(0.005, 1, 0.005,0.5))

}
